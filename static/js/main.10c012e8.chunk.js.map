{"version":3,"sources":["myfirebase.js","components/Tweets.js","components/TweetFactory.js","router/Home.js","router/Profile.js","components/AuthForm.js","router/Auth.js","components/Navigation.js","components/RouterComponent.js","components/App.js","index.js"],"names":["authService","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","dbService","firestore","storageService","storage","Tweets","tweetObj","isOwner","useState","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","useCallback","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","e","preventDefault","update","onChange","value","target","className","type","placeholder","required","autoFocus","onClick","src","icon","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","onLogoutClick","signOut","push","updateProfile","AuthForm","email","password","newAccount","error","inputs","setInputs","handleChange","name","toggleAccount","event","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","cursor","Auth","onSocialClick","provider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","to","marginRight","marginLeft","display","flexDirection","alignItems","fontSize","faUser","marginTop","RouterComponent","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c012e8.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nexport const firebaseInstance = firebase.initializeApp(firebaseConfig);\nexport const authService = firebase.auth();\nexport const googleProvider = firebase.auth.GoogleAuthProvider;\nexport const githubProvider = firebase.auth.GithubAuthProvider;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useCallback, useState } from 'react';\nimport { dbService, storageService } from 'myfirebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Tweets = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = useCallback(async () => {\n    const ok = window.confirm('Are you sure you want delete?');\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  }, [tweetObj.attachmentUrl, tweetObj.id]);\n\n  const toggleEditing = useCallback(() => {\n    setEditing(prev => !prev);\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      await dbService.doc(`tweets/${tweetObj.id}`).update({\n        text: newTweet,\n      });\n      setEditing(prev => !prev);\n    },\n    [newTweet, tweetObj.id]\n  );\n\n  const onChange = useCallback(e => {\n    const { value } = e.target;\n    setNewTweet(value);\n  }, []);\n\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              required\n              onChange={onChange}\n              autoFocus\n              className=\"formInput\"\n            />\n            <button type=\"submit\" className=\"formBtn\">\n              Update Tweet\n            </button>\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweets;\n","import React, { useCallback, useState } from 'react';\nimport { dbService, storageService } from 'myfirebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onFileChange = e => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      const { result } = finishedEvent.currentTarget;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  const onChange = useCallback(e => {\n    const {\n      target: { value },\n    } = e;\n    setTweet(value);\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      if (tweet === '') {\n        return;\n      }\n      e.preventDefault();\n      let attachmentUrl = '';\n      if (attachment !== '') {\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, 'data_url');\n        attachmentUrl = await response.ref.getDownloadURL();\n      }\n      const tweetObj = {\n        text: tweet,\n        createdAt: Date.now(),\n        createId: userObj.uid,\n        attachmentUrl,\n      };\n      await dbService.collection('tweets').add(tweetObj);\n      setTweet('');\n      setAttachment('');\n    },\n    [attachment, tweet, userObj.uid]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={tweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <button type=\"submit\" className=\"factoryInput__arrow\">\n            &rarr;\n          </button>\n        </div>\n        <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n        {attachment && (\n          <div className=\"factoryForm__attachment\">\n            <img\n              src={attachment}\n              style={{\n                backgroundImage: attachment,\n              }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default TweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'myfirebase';\nimport Tweets from 'components/Tweets';\nimport TweetFactory from 'components/TweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('tweets').onSnapshot(snapshot => {\n      const tweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div className=\"tweets\">\n        {tweets.map(tweet => (\n          <Tweets key={tweet.id} tweetObj={tweet} isOwner={tweet.createId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService } from 'myfirebase';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogoutClick = useCallback(() => {\n    authService.signOut();\n    history.push('/');\n  }, [history]);\n\n  const onChange = useCallback(e => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  }, []);\n\n  const onSubmit = useCallback(\n    async e => {\n      e.preventDefault();\n      if (userObj.displayName !== newDisplayName) {\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n        refreshUser();\n      }\n    },\n    [newDisplayName, refreshUser, userObj]\n  );\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          onChange={onChange}\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          autoFocus\n          className=\"formInput\"\n        />\n        <button type=\"submit\" className=\"formBtn\">\n          Update Profile\n        </button>\n      </form>\n      <button onClick={onLogoutClick} className=\"formBtn cancelBtn logOut\">\n        Log Out\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useCallback, useState } from 'react';\nimport { authService } from 'myfirebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst AuthForm = () => {\n  const [inputs, setInputs] = useState({\n    email: '',\n    password: '',\n    newAccount: true,\n    error: '',\n  });\n\n  const { email, password, newAccount, error } = inputs;\n\n  const handleChange = useCallback(\n    e => {\n      const { name, value } = e.target;\n      setInputs({ ...inputs, [name]: value });\n    },\n    [inputs]\n  );\n\n  const toggleAccount = useCallback(() => {\n    setInputs({\n      ...inputs,\n      newAccount: !newAccount,\n    });\n  }, [inputs, newAccount]);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setInputs({\n        ...inputs,\n        error: error.message,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={handleChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={handleChange}\n          className=\"authInput\"\n        />\n        <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? 'Create Account' : 'Sign In'} />\n      </form>\n      {error && <span className=\"authError\">{error}</span>}\n      <span onClick={toggleAccount} style={{ cursor: 'pointer' }}>\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService, githubProvider, googleProvider } from 'myfirebase';\nimport AuthForm from 'components/AuthForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async e => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === 'google') {\n      provider = new googleProvider();\n    } else if (name === 'github') {\n      provider = new githubProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul className=\"Navigation\">\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from 'router/Home';\nimport Profile from 'router/Profile';\nimport Auth from 'router/Auth';\nimport Navigation from 'components/Navigation';\n\nconst RouterComponent = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div className=\"Router\">\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default RouterComponent;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { authService } from 'myfirebase';\nimport RouterComponent from 'components/RouterComponent';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = useCallback(() => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  }, []);\n  return (\n    <>\n      {init ? (\n        <RouterComponent refreshUser={refreshUser} isLoggedIn={!!userObj} userObj={userObj} />\n      ) : (\n        'Initializing....'\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}